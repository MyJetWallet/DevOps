---
- name: playbook for install packages
  hosts: spot
  remote_user: monfex
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    usermod:
      user: "monfex"
      group: "docker"

  tasks:

    - name: Run the equivalent of "apt-get update" as a separate step
      become: yes
      apt:
        update_cache: yes

    - name: Install ubuntu packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - jq
          - python3-pip
          - git
          - nano
        state: present
      tags:
        - packages

    - name: Install bottle python package
      pip:
        name: docker

    - name: ensure repository key is installed
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Verify that we have the key with the fingerprint
      apt_key:
        id: 0EBFCD88
        state: present

    - name: ensure docker registry is available
      apt_repository: repo='deb https://download.docker.com/linux/ubuntu focal stable' state=present

    - name: ensure docker and dependencies are installed
      apt: name=docker-ce update_cache=yes

    - name: Add remote user to "docker" group
      user:
        name: "{{ usermod.user }}"
        group: "{{ usermod.group }}"
        append: yes

    - service: name=docker state=restarted


    - name: Latest compose version
      shell: COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4) && echo $COMPOSE_VERSION
      register: compose_version

    - name: install docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ compose_version.stdout }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
        dest: /usr/bin/docker-compose
        mode: 'u+x,g+x,a+x'

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "/home/{{ usermod.user }}/monitoring"
        state: directory
        mode: '0755'

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "/home/{{ usermod.user }}"
        state: directory
        recurse: yes
        owner: "{{ usermod.user }}"
        group: "{{ usermod.user }}"

    - name: Copy monitoring/docker-compose.yml
      ansible.builtin.copy:
        src: monitoring/docker-compose.yml
        dest: "/home/{{ usermod.user }}/monitoring/docker-compose.yml"
        owner: "{{ usermod.user }}"
        group: "{{ usermod.user }}"

    - name: start monitoring
      shell: docker-compose up -d
      args:
        chdir: "/home/{{ usermod.user }}/monitoring/"
      tags:
        - cadvisor

    - name: stop ubuntu dns
      shell: systemctl disable systemd-resolved && systemctl mask systemd-resolved && systemctl stop systemd-resolved
      become: yes

    - name: unlink resolv
      shell: unlink /etc/resolv.conf && touch /etc/resolv.conf
      become: yes

    - name: dns servers
      ansible.builtin.copy:
        src: resolv.conf
        dest: /etc/resolv.conf
        owner: monfex
        group: monfex
        mode: '0755'
      become: yes

    - name: get a result specific to master_primary
      shell: echo $(hostnamectl status | grep Static | awk {'print $3'})
      register: hostname

    - set_fact:
        psk={{ hostname.stdout }}

    - shell: echo '127.0.0.1 localhost {{ hostname.stdout }}' > /etc/hosts
      become: true
